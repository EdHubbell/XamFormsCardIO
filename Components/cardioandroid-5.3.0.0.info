{"Name":"Card.io for Android","Id":2444,"Alias":"cardioandroid","Description":"Card.io is a library for iOS and Android that can scan credit card details in from the device\u0027s camera similar to a barcode scanner.  Card.io makes scanning and entering Credit Card information simple.\n\n## Features\n \n - **Live Camera Card Scanning** - Quick and simple integration.  Get up and running in 5 minutes.\n - **Optional Manual Entry** - Users can choose to type their credit cards in.  Card.io provides a slick interface for manual card entry.\n - **Secure** - No credit card information is stored or transmitted.\n - **Free** - SDK\u0027s are free for both Android and iOS.\n \n\n## Learn More\nLearn more about Card.io by visiting http://www.card.io","Version":"5.3.0.0","Summary":"Credit card scanning for mobile apps","QuickStart":"\n## Adding card.io to your Android app\n\nYour application must be set to use a minimum Android SDK level of 8 (Froyo 2.2) or higher to use card.io.\n\nThere are two activities that card.io provides.  They need to be registered by adding them to your `AndroidManifest.xml` by adding the following lines inside of the `\u003capplication\u003e...\u003c/application\u003e` tags:\n\n```\n\u003capplication\u003e\n    \u003cactivity android:name=\"io.card.payment.CardIOActivity\" \n        android:configChanges=\"keyboardHidden|orientation\" /\u003e\n    \u003cactivity android:name=\"io.card.payment.DataEntryActivity\" /\u003e\n\u003c/application\u003e  \n```\n\nYou will also need to add permissions that card.io requires to your manifest.  You can add them directly to the manifest file, or you can add the following C# code to your project:\n\n```\n[assembly: UsesPermission(Android.Manifest.Permission.AccessNetworkState)]\n[assembly: UsesPermission(Android.Manifest.Permission.Internet)]\n[assembly: UsesPermission(Android.Manifest.Permission.Camera)]\n[assembly: UsesPermission(Android.Manifest.Permission.Vibrate)]\n```\n\nYou should also declare some of the features your app is using.  Again you can do this directly in the manifest, or by adding this C# code to your project:\n\n```\n[assembly: UsesFeature(\"android.hardware.camera\", Required = false)]\n[assembly: UsesFeature(\"android.hardware.camera.autofocus\", Required = false)]\n[assembly: UsesFeature(\"android.hardware.camera.flash\", Required = false)]\n```\n\n\nYou can start scanning by starting the CardIOActivity for a result:\n\n```\nvar intent = new Intent(this, typeof(CardIOActivity));\nintent.PutExtra(CardIOActivity.ExtraRequireExpiry, true); \t\nintent.PutExtra(CardIOActivity.ExtraRequireCvv, true); \t\t\nintent.PutExtra(CardIOActivity.ExtraRequirePostalCode, false); \nintent.PutExtra(CardIOActivity.ExtraUseCardioLogo, true);\n\nStartActivityForResult (intent, 101);\n```\n\nIn your activity you should override the `OnActivityResult` to receive the result from the activity we just started:\n\n```\nprotected override void OnActivityResult (int requestCode, Result resultCode, Intent data)\n{\n\tbase.OnActivityResult (requestCode, resultCode, data);\n\n\tif (data != null) {\n\n\t\t// Be sure to JavaCast to a CreditCard (normal cast won\u0027t work)\t\t \n\t\tvar card = data.GetParcelableExtra (CardIOActivity.ExtraScanResult)\n\t\t\t\t\t\t.JavaCast\u003cCreditCard\u003e ();\n\t\t\t\t\n\t\tConsole.WriteLine (\"Scanned: \" + card.FormattedCardNumber);\n\t}\n}\n```\n","Hash":"b238f2bc47044f334047f5e1023b1c28","TargetPlatforms":["android"],"TrialHash":null}